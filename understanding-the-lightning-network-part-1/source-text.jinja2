{{ _('Understanding the Lightning Network - Part 1:') }}

{{ _('Payment Channels') }}

{{ _('bitcoindesigned.com') }}

{{ _('Payment channels are one of the main elements playing a role in the Lightning network, so let’s take a look at how they works.') }}

{{ _('What is a payment channel?') }}

{{ _('It’s a manner to make a series of transactions “off-chain”, i.e. without actually relaying them to the blockchain, but still benefitting from the “on-chain” security.') }}

{{ _('That allows a huge number of really fast and almost free transactions to be made through the channel, because you don’t need to settle each of them on the blockchain.') }}

{{ _('For the Lightning Network, we need bidirectional payment channels, which means that both parties that start a channel have to be able to send bitcoins.') }}

{{ _('And, of course, this channel has to work trustlessly, so the parties don’t need to trust each other to agree with beginning transacting.') }}

{{ _('Opening a channel') }}

{{ _('Alice needs to send 1 btc to Bob. Since they know they are going to do a lot of transactions in the near future, they decide to use a lightning network channel to make things faster and cheaper. They will start a channel with a 4 bitcoins deposit by creating an opening transaction.') }}

{{ _('Step-by-step') }}

{{ _('Each of them sends 4 bitcoins to a multisig address that needs both their keys to sign a valid spending transaction.') }}

{{ _('Opening transaction') }}

{{ _('multisig') }}

{{ _('4 BTC') }}

{{ _('from Bob') }}

{{ _('4 BTC') }}

{{ _('from Alice') }}

{{ _('They create a secret (string of numbers) and a hash of the secret, and exchange the hash with the other.') }}

{{ _('Bob’s secret hash') }}

{{ _('Alice’s secret hash') }}

{{ _('Remember, the first transaction we want to make is the 1 bitcoin that Alice has to give Bob.') }}

{{ _('Alice creates a commitment transaction from the opening transaction sending 3 bitcoins to herself and 5 to a new multisig address.') }}

{{ _('Alice’s first commitment transaction') }}

{{ _('1st condition') }}

{{ _('Alice') }}

{{ _('3 BTC') }}

{{ _('2nd condition') }}

{{ _('multisig') }}

{{ _('5 BTC') }}

{{ _('This new multisig address can be unlocked by:') }}

{{ _('Bob, only after 1000 extra blocks are mined (this condition has a time lock called CheckSequenceVerify).') }}

{{ _('Alice, if she presents the secret for which Bob gave her the hash previously (having only the hash will not work so, for now, she can’t unlock the transaction).') }}

{{ _('multisig') }}

{{ _('5 BTC') }}

{{ _('to Bob’s key + 1000 block wait') }}

{{ _('OR') }}

{{ _('to Alice’s key + Bob’s secret') }}

{{ _('Alice signs the commitment transaction and gives the half-valid transaction (needs Bob signature to be valid) to Bob.') }}

{{ _('Bob also creates a half-valid transaction with his signature sending 5 btcs to himself and 3 to a new multisig address and gives it to Alice.') }}

{{ _('Bob’s first commitment transaction') }}

{{ _('1st condition') }}

{{ _('Bob') }}

{{ _('5 BTC') }}

{{ _('2nd condition') }}

{{ _('multisig') }}

{{ _('3 BTC') }}

{{ _('This new multisig address can be unlocked by:') }}

{{ _('Alice, after waiting 1000 new blocks being mined.') }}

{{ _('Bob, if presenting Alice’s secret.') }}

{{ _('multisig') }}

{{ _('3 BTC') }}

{{ _('to Alice’s key + 1000 block wait') }}

{{ _('to Bob’s key + Alice’s secret') }}

{{ _('After the exchange of the half-valid transactions, the opening transaction is broadcast and recorded on the blockchain. The channel is officially open.') }}

{{ _('Opening transaction') }}

{{ _('Updating a channel') }}

{{ _('Now, Bob has to give 2 bitcoins to Alice, so they need to update the channel state with new commitment transactions that will reflect the new balance.') }}

{{ _('Step-by-step') }}

{{ _('New secrets are created and their hashes exchanged. They will be used for this next commitment transaction.') }}

{{ _('Bob’s secret') }}

{{ _('hash') }}

{{ _('Alice’s secret') }}

{{ _('hash') }}

{{ _('Alice creates a commitment transaction sending 5 btc to herself and 3 btc to a new multisig address that has the same unlocking conditions as before, signs and gives it to Bob.') }}

{{ _('Alice’s second commitment transaction') }}

{{ _('1st condition') }}

{{ _('Alice') }}

{{ _('5 BTC') }}

{{ _('2nd condition') }}

{{ _('multisig') }}

{{ _('3 BTC') }}

{{ _('to Bob’s key + 1000 block wait') }}

{{ _('OR') }}

{{ _('to Alice’s key + Bob’s secret') }}

{{ _('Bob creates a commitment transaction sending 3 btc to himself and 5 btc to the new multisig address with the same unlocking conditions as before, signs and gives it to Alice.') }}

{{ _('Bob’s second commitment transaction') }}

{{ _('1st condition') }}

{{ _('Bob') }}

{{ _('3 BTC') }}

{{ _('2nd condition') }}

{{ _('multisig') }}

{{ _('5 BTC') }}

{{ _('to Alice’s key + 1000 block wait') }}

{{ _('OR') }}

{{ _('to Bob’s key + Alice’s secret') }}

{{ _('Alice and Bob exchange their old secrets, used in the first commitment.') }}

{{ _('This process is repeated every time the balance needs to be updated.') }}

{{ _('Incentives for a trustless system') }}

{{ _('So now Bob has 2 commitment transactions, the first one giving him more money than the second. So why doesn’t he broadcast the first one now and scam Alice? Let’s see what would happen.') }}

{{ _('Step-by-step') }}

{{ _('Bob signs and broadcasts the half-valid transaction that Alice first sent him.') }}

{{ _('Alice will get 3 btc (her balance at the time of the commitment) immediately.') }}

{{ _('The other 5 btc will go to the address that Bob can only unlock after 1000 blocks.') }}

{{ _('Bob’s key + 1000 block wait') }}

{{ _('But now Alice has Bob’s secret from that commitment, so she can access the multisig address before Bob (she doesn’t have to wait 1000 blocks) and get all the bitcoins to herself.') }}

{{ _('to Alice’s key + Bob’s secret') }}

{{ _('Bob’s attempt to defraud Alice has just backfired!') }}

{{ _('The same will happen if Alice is the one trying to broadcast an old commitment. This way, both parties are strongly incentivized to respect the most recent state of the channel.') }}

{{ _('Author: Patrícia Estevão') }}

{{ _('Editor: Marco Agner') }}

{{ _('Main resources: https://bitcoinmagazine.com/articles/understanding-the-lightning-network-part-building-a-bidirectional-payment-channel-1464710791/') }}

